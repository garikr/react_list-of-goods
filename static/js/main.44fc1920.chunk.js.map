{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","startGoods","setState","sortByType","type","reverseGoods","resetGoodsOrder","this","allGoods","goods","visibleGoods","ALPABET","sort","goodA","goodB","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,yEAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,WAAa,WACX,EAAKC,SAAS,CAAEL,WAAW,KAR/B,EAWEM,WAAa,SAACC,GACZ,EAAKF,SAAS,CAAEH,SAAUK,KAZ9B,EAeEC,aAAe,WACb,EAAKH,UAAS,SAACN,GAAD,MAAY,CAAEE,YAAaF,EAAME,gBAhBnD,EAmBEQ,gBAAkB,WAChB,EAAKJ,SAAS,CAAEJ,YAAY,EAAOC,SAAU,KApBjD,4CAuBE,WAAU,IAAD,OACP,EAA4CQ,KAAKX,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SACzBS,EAzDV,SACEC,EACAV,EACAD,GAGA,IAAMY,EAAY,YAAOD,GAGzB,OAAQV,GACN,KAAKN,EAASkB,QACZD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAKrB,EAASuB,OACZN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAM7D,OAAOnB,EACHY,EAAaQ,UACbR,EAmCeS,CACfzB,EACAK,EACAD,GAGF,OACE,qBAAKsB,UAAU,MAAf,SACGvB,EAEG,qCACE,wBACEO,KAAK,SACLiB,QAAS,kBAAM,EAAKlB,WAAWV,EAASkB,UAF1C,iCAOA,wBACEP,KAAK,SACLiB,QAAS,kBAAM,EAAKlB,WAAWV,EAASuB,SAF1C,4BAOA,wBACEZ,KAAK,SACLiB,QAAS,kBAAM,EAAKhB,gBAFtB,qBAOA,wBACED,KAAK,SACLiB,QAAS,kBAAM,EAAKf,mBAFtB,mBAOA,oBAAIc,UAAU,QAAd,SACGZ,EAASc,KAAI,SAAAC,GAAI,OAChB,oBAAIH,UAAU,cAAd,SACGG,GAD8BA,WAQvC,wBACEnB,KAAK,SACLiB,QAAS,kBAAM,EAAKpB,cAFtB,yBA1EZ,GAAyBuB,aCrDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.44fc1920.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Component } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((goodA, goodB) => goodA.localeCompare(goodB));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((goodA, goodB) => goodA.length - goodB.length);\n      break;\n\n    default:\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  startGoods = () => {\n    this.setState({ isStarted: true });\n  };\n\n  sortByType = (type: SortType) => {\n    this.setState({ sortType: type });\n  };\n\n  reverseGoods = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  resetGoodsOrder = () => {\n    this.setState({ isReversed: false, sortType: 0 });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n    const allGoods = getReorderedGoods(\n      goodsFromServer,\n      sortType,\n      isReversed,\n    );\n\n    return (\n      <div className=\"App\">\n        {isStarted\n          ? (\n            <>\n              <button\n                type=\"button\"\n                onClick={() => this.sortByType(SortType.ALPABET)}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => this.sortByType(SortType.LENGTH)}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => this.reverseGoods()}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => this.resetGoodsOrder()}\n              >\n                Reset\n              </button>\n\n              <ul className=\"Goods\">\n                {allGoods.map(good => (\n                  <li className=\"Goods__item\" key={good}>\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.startGoods()}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}